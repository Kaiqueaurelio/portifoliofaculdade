
 Projeto de Banco de Dados com SQL Server

 Descrição
Este repositório contém um projeto acadêmico desenvolvido como parte do curso de Ciência da Computação. O objetivo é criar, configurar e manipular um banco de dados utilizando SQL Server, abordando práticas de modelagem de dados, criação de tabelas, inserção de dados, consultas SQL e manipulação de registros.

 Tecnologias Utilizadas
- SQL Server
- Git

 Instalação e Configuração
1. Clone este repositório:
   ```bash
   git clonehttps://github.com/Kaiqueaurelio/portifoliofaculdade/blob/main/Projeto%20de%20Banco%20de%20Dados%20com%20SQL%20Server
   ```
2. Importe os scripts SQL do diretório `scripts/` para o SQL Server.

 Estrutura do Banco de Dados

 Tabelas Criadas:
- **Fornecedor**: Armazena informações sobre os fornecedores do sistema.
- **Cliente**: Armazena informações dos clientes.
- **Produto**: Armazena os produtos disponíveis para venda.
- **NotaFiscal**: Armazena as notas fiscais emitidas.
- **ItemNota**: Armazena os itens incluídos em cada nota fiscal.

Scripts para Criação das Tabelas:

```sql
CREATE TABLE Fornecedor (
    idFornecedor INT PRIMARY KEY,
    RazaoSocial VARCHAR(255) UNIQUE NOT NULL,
    NomeFantasia VARCHAR(255) NOT NULL,
    Telefone VARCHAR(20) NOT NULL
);

CREATE TABLE Cliente (
    idCliente INT PRIMARY KEY,
    Nome VARCHAR(255) NOT NULL,
    Endereco VARCHAR(255) NOT NULL,
    Numero INT NOT NULL,
    Telefone VARCHAR(20) NOT NULL,
    Bairro VARCHAR(255) NOT NULL,
    Cidade VARCHAR(255) NOT NULL,
    Estado CHAR(2) NOT NULL
);

CREATE TABLE Produto (
    idProduto INT PRIMARY KEY,
    Nome VARCHAR(255) NOT NULL,
    Preco DECIMAL(10, 2) NOT NULL,
    idFornecedor INT NOT NULL,
    FOREIGN KEY (idFornecedor) REFERENCES Fornecedor(idFornecedor)
        ON UPDATE CASCADE 
        ON DELETE CASCADE
);

CREATE TABLE NotaFiscal (
    NumeroNota INT PRIMARY KEY,
    ValorTotal DECIMAL(10, 2) NOT NULL,
    Data DATE NOT NULL,
    idCliente INT NOT NULL,
    FOREIGN KEY (idCliente) REFERENCES Cliente(idCliente)
);

CREATE TABLE ItemNota (
    NumeroNota INT NOT NULL,
    idProduto INT NOT NULL,
    Quantidade INT NOT NULL,
    Preco DECIMAL(10, 2) NOT NULL,
    PRIMARY KEY (NumeroNota, idProduto),
    FOREIGN KEY (NumeroNota) REFERENCES NotaFiscal(NumeroNota),
    FOREIGN KEY (idProduto) REFERENCES Produto(idProduto)
);
```

Inserção de Dados

 Script para Inserir Dados nas Tabelas:

```sql
INSERT INTO Fornecedor (idFornecedor, RazaoSocial, NomeFantasia, Telefone)
VALUES 
(1, 'G & C Engenharia', 'G & C Engenharia', '51 1111-2233'),
(2, 'Uni10 Tecnologia', 'Uni10', '51 2222-2233'),
(3, 'HighLength Infra', 'HighLength', '51 3333-2233'),
(4, 'FullPower Tecno', 'FullPower', '51 4444-2233');

INSERT INTO Cliente (idCliente, Nome, Endereco, Numero, Telefone, Bairro, Cidade, Estado)
VALUES
(1, 'João da Silva', 'Rua Pernambuco', 150, '51 5555-3344', 'Hamburgo Velho', 'Novo Hamburgo', 'RS'),
(2, 'Paulo Bocão', 'Rua Alagoas', 160, '51 6666-3344', 'Humaitá', 'Porto Alegre', 'RS'),
(3, 'Juca Chewbacca', 'Rua João Pedro', 170, '51 7777-3344', 'Menino Deus', 'Porto Alegre', 'RS'),
(4, 'Pedro Maçaneta', 'Rua Arábia', 180, '51 8888-3344', 'Santo Afonso', 'Novo Hamburgo', 'RS'),
(5, 'Pedro Pedreira', 'Rua Líbia', 190, '51 9999-3344', 'Centro', 'Novo Paraíso', 'SP'),
(17, 'Jorge Santos', 'Avenida dos Estados', 707, '51 92345-6789', 'Centro Histórico', 'Porto Alegre', 'RS');

INSERT INTO Produto (idProduto, Nome, Preco, idFornecedor)
VALUES
(1, 'Mouse', 15.5, 1),
(2, 'Teclado', 23.8, 1),
(3, 'HD', 155.0, 2),
(4, 'Windows Vista Student', 199.0, 4),
(20, 'Home Theater Sony HT-Z9F', 1999.00, 4);

INSERT INTO NotaFiscal (NumeroNota, ValorTotal, Data, idCliente)
VALUES
(100, 250.0, '2009-01-08', 4),
(1501, 500.0, '2009-01-15', 1),
(1502, 1500.0, '2009-01-25', 2),
(1507, 120.0, '2009-04-02', 1);

INSERT INTO ItemNota (NumeroNota, idProduto, Quantidade, Preco)
VALUES
(100, 1, 10, 150.0),
(100, 2, 2, 48.0),
(100, 4, 2, 52.0),
(1507, 3, 1, 120.0);
```

 Consultas SQL e Manipulação de Dados

 Exemplos de Consultas:
```sql
-- Mostrar o valor do produto mais caro
SELECT MAX(Preco) AS ProdutoMaisCaro FROM Produto;

-- Mostrar o valor do produto mais barato
SELECT MIN(Preco) AS ProdutoMaisBarato FROM Produto;

-- Mostrar a quantidade de fornecedores na tabela Produto
SELECT COUNT(DISTINCT idFornecedor) AS QuantidadeFornecedores FROM Produto;

-- Mostrar a quantidade de clientes na tabela NotaFiscal
SELECT COUNT(DISTINCT idCliente) AS QuantidadeClientes FROM NotaFiscal;

-- Mostrar quantos clientes não possuem telefone
SELECT COUNT(*) AS ClientesSemTelefone
FROM Cliente
WHERE Telefone IS NULL OR Telefone = '';
```

### Atualizações e Exclusões:
```sql
-- Excluir todos os produtos do fornecedor com id 4001
DELETE FROM Produto WHERE idFornecedor = 4001;

-- Excluir item 20 do pedido com NumeroNota 2901011
DELETE FROM ItemNota WHERE NumeroNota = 2901011 AND idProduto = 20;

-- Excluir todos os produtos 'Coloração Wellaton' de todas as tabelas
DELETE FROM ItemNota WHERE idProduto IN (SELECT idProduto FROM Produto WHERE Nome = 'Coloração Wellaton');
DELETE FROM Produto WHERE Nome = 'Coloração Wellaton';
```

## Contribuição
Contribuições são bem-vindas! Sinta-se à vontade para abrir issues ou enviar pull requests.

## Licença
Este projeto está licenciado sob a Licença MIT.

## Contato
Kaique Aurelio -[decoanalytics@outlook.com.br -  https://github.com/Kaiqueaurelio
```

Este README oferece uma visão geral completa do seu projeto, desde a criação e configuração do banco de dados até exemplos de consultas SQL e manipulação de dados. Ele também inclui informações sobre como contribuir, a licença do projeto e seus dados de contato. Isso ajudará outras pessoas a entenderem rapidamente o propósito do repositório e a interagirem com ele de forma eficaz.
